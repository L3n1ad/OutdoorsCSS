.story{
    width: 75%;
    margin: 0 auto;
    box-shadow: 0 3rem 6rem rgba($color-black, .1);
    background-color: rgba($color-white, .6);
    border-radius: 3px;
    padding: 6rem;
    // because the transform translateX would push the element into that padding so adding that 3rem making sure the the padding will stay the same on the left side
    padding-left: 9rem;
    font-size: $default-font-size;
    transform: skewX(-12deg);

    & > * {
        transform: skewX(12deg);
    }

    @include respond(tab-port) {
        width: 100%;
        padding: 4rem;
        padding-left: 7rem;
    }

    @include respond(phone) {
        width: 80%;
        transform: skewX(0);
    }

    &__shape {
        width: 15rem;
        height: 15rem;
        float: left;
        // 50% fill be the half of the width and the height
        // and 50% 50% for the position of the center of the circle
        // float needed to it to work and the element need to have width and height
        // webkit needed to cross browser support
        // shape-outside just defines how the outside content should be wrapped around it
        -webkit-shape-outside: circle(50% at 50% 50%);
        shape-outside: circle(50% at 50% 50%);

        // the circle needs to be defined seperately 
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        // transform is the best way to position floated elements
        transform: translateX(-3rem) skewX(12deg);
        // to fix to issue when the pictures cats are visible in case of hovering or transforming the img
        overflow: hidden;
        position: relative;

        @include respond(phone) {
            transform: translateX(-3rem) skewX(0);
        }
    }

    &__img {
        // responsive web design requires to every image to have a height
        // having 100% because the parent element __shape already has a defined height
        // it needs to be height because the img is wider then higher so with width it would cut the image and it wouldn't fill up the whole circle
        height: 100%;
        transform: translateX(-4rem) scale(1.4);
        backface-visibility: hidden;
        transition: all .5s;
    }

    &__text {
        transform: skewX(12deg);

         @include respond(phone) {
            transform: skewX(0);
        }
    }

    &__caption {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, 20%);
        color: $color-white;
        text-transform: uppercase;
        font-size: 1.7rem;
        text-align: center;
        opacity: 0;
        transition: all .5s;
        backface-visibility: hidden;
    }

    // css targeting -> when :hover is happening on story block we apply these changes on story__caption
    &:hover &__caption {
        opacity: 1;
        transform: translate(-50%, -50%);
    }

    // css targeting -> when :hover is happening on story block we apply these changes on story__img
    &:hover &__img {
        transform: translateX(-4rem) scale(1);
        filter: blur(3px) brightness(80%);
    }

}